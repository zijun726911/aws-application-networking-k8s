# k1 apply -f examples/demo/a/step2-in-cluster-1.yaml
# export LATTICE_SERVICE_DNS=$(k1 get httproute my-httproute -o json | jq -r '.metadata.annotations["application-networking.k8s.aws/lattice-assigned-domain-name"]') && echo $LATTICE_SERVICE_DNS
# k1 exec client -- curl $LATTICE_SERVICE_DNS/service-2-from-cluster-2 2>/dev/null


# k1 delete -f examples/demo/a/step2-in-cluster-1.yaml
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: my-gateway
  annotations:
    application-networking.k8s.aws/lattice-vpc-association: "true"
spec:
  gatewayClassName: amazon-vpc-lattice
  listeners:
    - name: http
      protocol: HTTP
      port: 80

---

apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: my-httproute
spec:
  parentRefs:
    - name: my-gateway
      sectionName: http
  rules:
    - backendRefs:
        - name: service2
          kind: ServiceImport
      matches:
        - path:
            type: PathPrefix
            value: /service-2-from-cluster-2
---
apiVersion: multicluster.x-k8s.io/v1alpha1
kind: ServiceImport
metadata:
  name: service2
spec:
  type: ClusterSetIP
  ports:
    - port: 80
      protocol: TCP

